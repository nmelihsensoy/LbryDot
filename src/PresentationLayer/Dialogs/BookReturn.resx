<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>